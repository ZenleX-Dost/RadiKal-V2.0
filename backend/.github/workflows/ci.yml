name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black isort
    
    - name: Check code formatting with black
      working-directory: ./backend
      run: black --check .
    
    - name: Check import sorting with isort
      working-directory: ./backend
      run: isort --check-only .
    
    - name: Lint with flake8
      working-directory: ./backend
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run tests with pytest
      working-directory: ./backend
      run: |
        pytest tests/ -v --cov=core --cov=api --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage
    
    - name: Check CHANGELOG.md updated
      run: |
        if git diff --name-only HEAD~1 HEAD | grep -q 'backend/CHANGELOG.md'; then
          echo "CHANGELOG.md updated"
        else
          echo "ERROR: CHANGELOG.md not updated!"
          exit 1
        fi
    
    - name: Check DEVELOPMENT_REGISTER.json updated
      run: |
        if git diff --name-only HEAD~1 HEAD | grep -q 'backend/DEVELOPMENT_REGISTER.json'; then
          echo "DEVELOPMENT_REGISTER.json updated"
        else
          echo "ERROR: DEVELOPMENT_REGISTER.json not updated!"
          exit 1
        fi

  integration-test:
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install httpx pytest
    
    - name: Start FastAPI server
      working-directory: ./backend
      run: |
        python main.py &
        sleep 10
    
    - name: Test API health endpoint
      run: |
        curl -f http://localhost:8000/api/xai-qc/health || exit 1
    
    - name: Test API authentication
      env:
        TEST_JWT_TOKEN: ${{ secrets.TEST_JWT_TOKEN }}
      run: |
        curl -H "Authorization: Bearer $TEST_JWT_TOKEN" \
             http://localhost:8000/api/xai-qc/metrics || echo "Auth test completed"

  docker-build:
    runs-on: ubuntu-latest
    needs: integration-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      working-directory: ./backend
      run: |
        docker build -t radikal-backend:test .
    
    - name: Test Docker image
      run: |
        docker run -d -p 8000:8000 --name test-container radikal-backend:test
        sleep 15
        curl -f http://localhost:8000/api/xai-qc/health || exit 1
        docker stop test-container
        docker rm test-container
    
    - name: Login to Docker Hub
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Push Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        docker tag radikal-backend:test ${{ secrets.DOCKER_USERNAME }}/radikal-backend:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/radikal-backend:latest
